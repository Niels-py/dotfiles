
# Apps
bind = SUPER,       RETURN, exec, alacritty
bind = SUPER,       W,      exec, firefox
bind = SUPER+SHIFT, W,      exec, firefox --private-window
bind = SUPER,       R,      exec, fuzzel
bind = SUPER,       E,      exec, pcmanfm-qt


# Media
bindel=, XF86AudioRaiseVolume, exec, if awk -v num=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2}') 'BEGIN { exit !(num < 1) }'; then wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+; fi
bindel=, XF86AudioLowerVolume, exec, if awk -v num=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2}') 'BEGIN { exit !(num > 0) }'; then wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-; fi
bindl=, XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindl=, XF86AudioNext, exec, playerctl next
bindl=, XF86AudioPrev, exec, playerctl previous
bindl=, XF86AudioPlay, exec, playerctl play-pause

# Actions
bind = SUPER,         Q,     killactive, 
bind = SUPER+CONTROL, E,     exit, 
bind = SUPER,         SPACE, togglefloating, 
bind = SUPER, 	      F,     fullscreen
bind = SUPER+SHIFT,   F,     fakefullscreen
bind = SUPER,         ESCAPE,   exec, hyprlock

# Tiling
bind = SUPER, P, pseudo, # dwindle

# Screenshot
bind = Super+Shift, S, exec, DIM=$(slurp); grim -g "$DIM" | wl-copy -t image/png; notify-send.sh "Screenshot" "Area: $DIM"
bind = Super, S, exec, grim -g "$(hyprctl monitors | awk -v id=$(hyprctl activeworkspace | awk '/monitorID/ {print $2}') '$0 ~ "ID "id {getline; sub(/^[[:blank:]]*/, ""); sub(/@.*at/, ""); temp=$1; $1=$2; $2=temp; sub(/x/, ","); print}')" | wl-copy -t image/png; notify-send.sh "Screenshot" "Monitor: $(hyprctl activeworkspace | awk 'NR==1 {gsub(":", ""); print $7}')"
bind = Super+CONTROL, S, exec, grim -g "$(hyprctl activewindow | awk '/at:/ {at=$2} /size:/ {gsub(/size: |,/, "x", $2); size=$2} END {print at, size}')" | wl-copy -t image/png; notify-send.sh "Screenshot" "Window: $(hyprctl activewindow | awk '/initialClass:/ {print $2}')"

# Move between windows
bind = SUPER, j, layoutmsg, cyclenext
bind = SUPER, k, layoutmsg, cycleprev
bind = SUPER, m, layoutmsg, focusmaster master

# Move between monitors
bind = SUPER, PERIOD, focusmonitor, 0
bind = SUPER, COMMA, focusmonitor, 1

# change amount of master
bind = SUPER, h, layoutmsg, addmaster
bind = SUPER, l, layoutmsg, removemaster

# Swap window
bind = SUPER+SHIFT, j, layoutmsg, swapnext
bind = SUPER+SHIFT, k, layoutmsg, swapprev
bind = SUPER+SHIFT, t, layoutmsg, swapwithmaster master

# Resize master
bind = SUPER+SHIFT, h, layoutmsg, mfact 0.3
bind = SUPER+SHIFT, l, layoutmsg, mfact 0.7
bind = SUPER+SHIFT, i, layoutmsg, mfact 0.5

# Switch workspaces with mainMod + [0-9]
bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = SUPER SHIFT, 1, movetoworkspace, 1
bind = SUPER SHIFT, 2, movetoworkspace, 2
bind = SUPER SHIFT, 3, movetoworkspace, 3
bind = SUPER SHIFT, 4, movetoworkspace, 4
bind = SUPER SHIFT, 5, movetoworkspace, 5
bind = SUPER SHIFT, 6, movetoworkspace, 6
bind = SUPER SHIFT, 7, movetoworkspace, 7
bind = SUPER SHIFT, 8, movetoworkspace, 8
bind = SUPER SHIFT, 9, movetoworkspace, 9
bind = SUPER SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = SUPER, SEMICOLON, togglespecialworkspace, scratchpad
bind = SUPER+SHIFT, SEMICOLON, movetoworkspace, special:scratchpad

# Scroll through existing workspaces with mainMod + scroll
bind = SUPER, mouse_down, workspace, e+1
bind = SUPER, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = SUPER, mouse:272, movewindow
bindm = Super, mouse:273, resizewindow
